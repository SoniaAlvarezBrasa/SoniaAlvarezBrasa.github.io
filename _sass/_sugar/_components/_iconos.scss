@mixin estilo-icon-fonts {
    [class^="icon-"]:before,
    [class*=" icon-"]:before {
        @content;
    }
}

@include estilo-icon-fonts {
    position: relative;
    top: .1em;
    margin-right: 0.2em;
}


.icon-verde{
    @include rwd-font-size (2rem, 3rem, 40rem, 75rem, 0.5rem);
    color: lime;
    margin-right: 0.3em;
}

@mixin sociales (
    $p: .4em,
    $m: .3em,
    $opacity: 0.9,
    $bg: #fff,
    $color: rgba(colorea($color-t1, d4), $opacity)
){
    // ul.sociales
    li {
        a {
            padding: $p;
            margin: $m;
            border-radius: 50%;
            background: $bg;
            color: $color;

            &.icon-facebook {
                &:hover, &:focus, &:target {
                    background: #3b5998;
                    color: $bg;
                }
            }
            &.icon-twitter {
                &:hover, &:focus, &:target {
                    background: #00aced;
                    color: $bg;
                }
            }
            &.icon-googleplus{
                &:hover, &:focus, &:target {
                    background: #dd4b39;
                    color: $bg;
                }
            }
            &.icon-linkedin {
                &:hover, &:focus, &:target {
                    background: #0077b5;
                    color: $bg;
                }
            }
            &.icon-youtube {
                &:hover, &:focus, &:target {
                    background: #b00;
                    color: $bg;
                }
            }
            &.icon-github {
                &:hover, &:focus, &:target {
                    background: #000;
                    color: $bg;
                }
            }
        }
    }
}

// ================== $maps Redes Sociales ===================
// Por orden alfabético

// Monocromas
$mapSocialMono: (
    codepen: #000,
    facebook: #3b5998,
    github: #181616,
    googleplus: #dd4b39,
    linkedin: #0077b5,
    twitter: #00aced,
    youtube: #b00
);
// Multicolor
$mapSocialMulti: (
    gitlab: #30353e
);
// ================== fin maps Redes Sociales ===================


// Para svg.svg--$name hijo de un <box>,
// P.ej.: span.svg--$name / svg.svg--$name.
// span.svg--$name con padding, margin-r,
// border-radius ... prev definidos
// Causa: CSS no puede leer hacia arriba
@mixin sociales-svg-box (
    // Fondo claro, texto oscuro
    $bg: $bg-body,
    $color: $color-body,
    // Simulación a color
    $filter-before: grayscale(1),
    $filter-after: none,
    // Transiciones
    $ss: $ss-icon
){
    // li.svg

    // Convirtiendo los iconos svg monocromos a B/W (color/bg)
    @each $name, $bgcolor in $mapSocialMono {
        // Sólo svg
        & svg.svg--#{$name} {
            background: $bg;
            fill: $color;
        }
        // Padre e hijo class .svg--$name
        // span.svg--$name + svg.svg--$name
        & .svg--#{$name} {
            transition: all $ss ease;
        }
    }
    // fill de iconos svg multicolor a filtro (b/w)
    @each $name, $bgcolor in $mapSocialMulti {
        // Sólo svg
        & svg.svg--#{$name} {
            background: $bg;
            -webkit-filter: $filter-before;
            filter: $filter-before;
        }
        // Padre e hijo class .svg--$name
        // span.svg--$name + svg.svg--$name
        & .svg--#{$name} {
            transition: all $ss ease;
        }
    }

    // li.svg
    &:hover, &:focus, &:target {
        // Invirtiendo los iconos svg monocromos a W/B (bg/color)
        @each $name, $bgcolor in $mapSocialMono {
            // Padre e hijo .svg--$name
            // span.svg--$name + svg.svg--$name
            & .svg--#{$name} {
                background: $bgcolor;
                fill: $bg;
            }
        }
        // fill de iconos svg multicolor a multicolor (filter: none)
        @each $name, $bgcolor in $mapSocialMulti {
            // Padre e hijo .svg--$name
            // span.svg--$name + svg.svg--$name
            & .svg--#{$name} {
                background: $bgcolor;
            }
            // Sólo svg
            & svg.svg--#{$name} {
                -webkit-filter: $filter-after;
                filter: $filter-after;
            }
        }
    }
}

// Versión contraria a la anterior:
// alterna en :hover color/bg
// NOTA: No tengo efecto para los mapas multicolor

@mixin sociales-svg-box-inverso (
    $bg: $bg-body,
    // $color: $color-body,
    $filter-before: none,
    $filter-after: none,
    $ss: $ss-icon
){
    // li.svg

    // Fondo corporativo y texto transparente
    @each $name, $bgcolor in $mapSocialMono {
        // Padre e hijo class .svg--$name
        // span.svg--$name + svg.svg--$name
        & .svg--#{$name} {
            background: $bgcolor;
            fill: $bg;
            transition: all $ss-icon ease;
        }
    }
    @each $name, $bgcolor in $mapSocialMulti {
        // Padre e hijo class .svg--$name
        // span.svg--$name + svg.svg--$name
        & .svg--#{$name} {
            background: $bgcolor;
            transition: all $ss-icon ease;
        }
        // fill de iconos svg multicolor a multicolor (filter: none)
        // Sólo svg
        & svg.svg--#{$name} {
            -webkit-filter: $filter-before;
            filter: $filter-before;
        }
    }

    // li.svg
    // Invirtiendo a fondo transparente y texto a color corporativo
    &:hover, &:focus, &:target {
        // Padre e hijo class .svg--$name
        // span.svg--$name + svg.svg--$name
        @each $name, $bgcolor in $mapSocialMono {
            & .svg--#{$name} {
                background: $bg;
                fill: $bgcolor;
            }
        }
        // NOTA: no tengo alternancia para svg con fill multicolor
        // fill de iconos svg multicolor a multicolor (filter: none)
        @each $name, $bgcolor in $mapSocialMulti {
            // Padre e hijo class .svg--$name
            // span.svg--$name + svg.svg--$name
            & .svg--#{$name} {
                background: $bg;
            }
            // Sólo svg
            & svg.svg--#{$name} {
                -webkit-filter: $filter-after;
                filter: $filter-after;
            }
        }
    }
}

// Para svg.svg--$name hijo de un <a> y nieto de un <box>
// P.ej.: li.svg--$name / a / svg.svg--$name
// li.svg--$name con padding, margin-r,
// border-radius ... prev definidos
// Causa: CSS no puede leer hacia arriba,
// ------ el <a> no tiene texto: sólo title y el icono
// ------ y <a> debe ser display *block para IE
@mixin sociales-svg-li-box (
    $bg: $bg-body,
    $color: $color-body,
    $filter-before: grayscale(1),
    $filter-after: none,
    $ss: $ss-icon
){
    // li.svg--icon

    // Convirtiendo los iconos svg monocromos a B/W (color/bg)
    @each $name, $bgcolor in $mapSocialMono {
        // Sólo svg
        & svg.svg--#{$name} {
            background: $bg;
            fill: $color;
        }
        // Abuelo y nieto class .svg--$name
        // li.svg--$name + svg.svg--$name
        & .svg--#{$name} {
            transition: all $ss ease;
        }
    }
    // fill de iconos svg multicolor a filtro (b/w)
    @each $name, $bgcolor in $mapSocialMulti {
        // Sólo svg
        & svg.svg--#{$name} {
            background: $bg;
            -webkit-filter: $filter-before;
            filter: $filter-before;
        }
        // Abuelo y nieto class .svg--$name
        // li.svg--$name + svg.svg--$name
        & .svg--#{$name} {
            transition: all $ss ease;
        }
    }

    // li.svg--icon
    &:hover, &:focus, &:target {
        // Invirtiendo los iconos svg monocromos a W/B (bg/color)
        @each $name, $bgcolor in $mapSocialMono {
            // Abuelo y nieto class .svg--$name
            // li.svg--$name + svg.svg--$name
            &.svg--#{$name},
            & .svg--#{$name} {
                background: $bgcolor;
                fill: $bg;
            }
        }
        // fill de iconos svg multicolor a multicolor (filter: none)
        @each $name, $bgcolor in $mapSocialMulti {
            // Abuelo y nieto class .svg--$name
            // li.svg--$name + svg.svg--$name
            &.svg--#{$name},
            & .svg--#{$name} {
                background: $bgcolor;
            }
            // Sólo svg
            & svg.svg--#{$name} {
                -webkit-filter: $filter-after;
                filter: $filter-after;
            }
        }
    }
}

// Versión contraria a la anterior:
// alterna en :hover color/bg corporativos (monocolor)
// NOTA: No tengo efecto para los mapas multicolor

@mixin sociales-svg-li-box-inverso (
    $bg: $bg-body,
    // $color: $color-body,
    $filter-before: none,
    $filter-after: none,
    $ss: $ss-icon
){
    // li.svg--icon

    // Fondo corporativo y texto transparente
    @each $name, $bgcolor in $mapSocialMono {
        // Abuelo y nieto class .svg--$name
        // li.svg--$name + svg.svg--$name
        &.svg--#{$name},
        & .svg--#{$name} {
            background: $bgcolor;
            fill: $bg;
            transition: all $ss-icon ease;
        }
    }
    @each $name, $bgcolor in $mapSocialMulti {
        // Abuelo y nieto class .svg--$name
        // li.svg--$name + svg.svg--$name
        &.svg--#{$name},
        & .svg--#{$name} {
            background: $bgcolor;
            transition: all $ss-icon ease;
        }
        // fill de iconos svg multicolor a multicolor (filter: none)
        // Sólo svg
        & svg.svg--#{$name} {
            -webkit-filter: $filter-before;
            filter: $filter-before;
        }
    }

    // li.svg--icon

    // Invirtiendo a fondo transparente y texto a color corporativo
    &:hover, &:focus, &:target {
        // Abuelo y nieto class .svg--$name
        // li.svg--$name + svg.svg--$name
        @each $name, $bgcolor in $mapSocialMono {
            &.svg--#{$name},
            & .svg--#{$name} {
                background: $bg;
                fill: $bgcolor;
            }
        }
        // NOTA: no tengo alternancia para svg con fill multicolor
        // fill de iconos svg multicolor a multicolor (filter: none)
        @each $name, $bgcolor in $mapSocialMulti {
            // Abuelo y nieto class .svg--$name
            // li.svg--$name + svg.svg--$name
            &.svg--#{$name},
            & .svg--#{$name} {
                background: $bg;
            }
            // Sólo svg
            & svg.svg--#{$name} {
                -webkit-filter: $filter-after;
                filter: $filter-after;
            }
        }
    }
}

// todo: crear un map de los colores sociales y un mixin con los parámetros
// Para escoger los colores del map o definir colores propios.
// Además de personalizar el estilo (vertical, redondo, cuadrado, ...)

.social {
    display: table;
    a {
        display: inline-block;
        color: rgba(#fff,.7);
        line-height: 1;
    }
    &.circle,
    &.square{
        a {
            background: rgba(#000,.5);
            padding: .4em;
            margin: .3em;
            &:hover {
                background: rgba(#000,.5);
            }
        }
    }
    &.circle {
        a:before {
            border-radius: 50%;
        }
    }
}

@mixin estilo-icon-fonts {
    [class^="icon-"]:before,
    [class*=" icon-"]:before {
        @content;
    }
}

@include estilo-icon-fonts {
    position: relative;
    top: .1em;
    margin-right: 0.2em;
}


.icon-verde{
    @include rwd-font-size (2rem, 3rem, 40rem, 75rem, 0.5rem);
    color: lime;
    margin-right: 0.3em;
}

@mixin sociales (
    $p: .4em,
    $m: .3em,
    $opacity: 0.9,
    $bg: #fff,
    $color: rgba(colorea($color-t1, d4), $opacity)
){
    // ul.sociales
    li {
        a {
            padding: $p;
            margin: $m;
            border-radius: 50%;
            background: $bg;
            color: $color;

            &.icon-facebook {
                &:hover, &:focus, &:target {
                    background: #3b5998;
                    color: $bg;
                }
            }
            &.icon-twitter {
                &:hover, &:focus, &:target {
                    background: #00aced;
                    color: $bg;
                }
            }
            &.icon-googleplus{
                &:hover, &:focus, &:target {
                    background: #dd4b39;
                    color: $bg;
                }
            }
            &.icon-linkedin {
                &:hover, &:focus, &:target {
                    background: #0077b5;
                    color: $bg;
                }
            }
            &.icon-youtube {
                &:hover, &:focus, &:target {
                    background: #b00;
                    color: $bg;
                }
            }
            &.icon-github {
                &:hover, &:focus, &:target {
                    background: #000;
                    color: $bg;
                }
            }
        }
    }
}

// ================== $maps Redes Sociales ===================
// Por orden alfabético

// ----- Brand colors -----
$mapSocialSimple:(
    codepen :(
        bg: #000, fill: #fff
    ),
    deviantart :(
        bg: #05cc47, fill: #fff
    ),
    facebook :(
        bg: #3b5998, fill: #fff
    ),
    github :(
        bg: #24292e , fill: #fff
    ),
    gitlab :(
        bg: #30353e, fill: none
    ),
    googleplus :(
        bg: #dd4b39, fill: #fff
    ),
    instagram :(
        bg: #c32aa3,
        gradient: linear-gradient(-135deg, #1400c8, #b900b4, #f50000),
        fill: propio
    ),
    linkedin :(
        bg: #0077b5, fill: #fff
    ),
    pinterest :(
        bg: #bd081c, fill: #fff
    ),
    stackoverflow :(
        bg-dark: #222426, bg-light: #f48023, fill: none
    ),
    twitter :(
        bg: #1da1f2 , fill: #fff
    ),
    youtube :(
        bg: #292929, fill: none
    ),
);

// ================== fin maps Redes Sociales ===================


// Para svg.svg--$name hijo de un <box>,
// P.ej.: span.svg--$name / svg.svg--$name.
// span.svg--$name con padding, margin-r,
// border-radius ... prev definidos
// Causa: CSS no puede leer hacia arriba

// Para svg.svg--$name hijo de un <a> y nieto de un <box>
// P.ej.: li.svg--$name / a / svg.svg--$name
// li.svg--$name con padding, margin-r,
// border-radius ... prev definidos
// Causa: CSS no puede leer hacia arriba,
// ------ el <a> no tiene texto: sólo title y el icono
// ------ y <a> debe ser display *block para IE

@mixin sociales-svg-li-box (
    $brand: bg,
    $bg: $bg-body,
    $color: $color-body,
    $filter-bw-before: grayscale(1),
    $filter-bw-after: none,
    $filter-color-before: brightness(999%),
    $filter-color-after: none,
    $ss: $ss-icon
){
    // li.svg / a / span.svg--name / svg.svg--name
    // li.svg--icon.svg--$name / a / svg.svg--$name

    @if $brand == bg {
        // Se inicia con fondo corporativo y texto transparente
        @each $name, $icon in $mapSocialSimple {
            // (li.svg--$name | li.svg--icon) + svg.svg--$name
            &.svg--#{$name},
            & .svg--#{$name} {
                @if map-get($icon, bg) {
                    fill: $bg;
                    background: map-get($icon, bg);
                    @if map-get($icon, gradient) {
                        background: -o-#{map-get($icon, gradient)};
                        background: -moz-#{map-get($icon, gradient)};
                        background: -webkit-#{map-get($icon, gradient)};
                    }
                } @else {
                    background: map-get($icon, bg-light);
                    & svg.svg--#{$name} {
                        .invertir--#{$name} {
                            fill: $bg;
                        }
                    }
                }
                @if map-get($icon, fill) == propio {
                    & svg.svg--#{$name} {
                        -webkit-filter: $filter-color-before;
                        filter: $filter-color-before;
                    }
                }

                -webkit-transition: all $ss-icon ease;
                transition: all $ss-icon ease;
            }
        }

        // Invirtiendo a fondo transparente y texto corporativo
        &:hover, &:focus, &:target {
            @each $name, $icon in $mapSocialSimple {
                // (li.svg--$name | li.svg--icon) + svg.svg--$name
                &.svg--#{$name},
                & .svg--#{$name} {
                    background: $bg;

                    @if map-get($icon, bg) {
                        @if map-get($icon, fill) == #fff {
                            fill: map-get($icon, bg);
                        } @else {
                            fill: map-get($icon, fill);
                        }
                    } @else {
                        & svg.svg--#{$name} {
                            .invertir--#{$name} {
                                fill: map-get($icon, bg-light);
                            }
                        }
                    }
                    @if map-get($icon, fill) == propio {
                        & svg.svg--#{$name} {
                            -webkit-filter: $filter-color-after;
                            filter: $filter-color-after;
                        }
                    }
                }
            }
        }

    // li.svg / a / span.svg--name / svg.svg--name
    // li.svg--icon.svg--$name / a / svg.svg--$name
    } @elseif $brand == color {
        // Se inicia con fondo transparente y texto corporativo
        @each $name, $icon in $mapSocialSimple {
            // (li.svg--$name | li.svg--icon) + svg.svg--$name
            &.svg--#{$name},
            & .svg--#{$name} {
                background: $bg;

                @if map-get($icon, bg) {
                    @if map-get($icon, fill) == #fff {
                        fill: map-get($icon, bg);
                    } @else {
                        fill: map-get($icon, fill);
                    }
                } @else {
                    & svg.svg--#{$name} {
                        .invertir--#{$name} {
                            fill: map-get($icon, bg-light);
                        }
                    }
                }

                -webkit-transition: all $ss-icon ease;
                transition: all $ss-icon ease;
            }
        }
        // Invirtiendo a fondo corporativo y texto transparente
        &:hover, &:focus, &:target {
            @each $name, $icon in $mapSocialSimple {
                // (li.svg--$name | li.svg--icon) + svg.svg--$name
                &.svg--#{$name},
                & .svg--#{$name} {
                    @if map-get($icon, bg) {
                        fill: $bg;
                        background: map-get($icon, bg);
                        @if map-get($icon, gradient) {
                            background: -o-#{map-get($icon, gradient)};
                            background: -moz-#{map-get($icon, gradient)};
                            background: -webkit-#{map-get($icon, gradient)};
                        }
                    } @else {
                        background: map-get($icon, bg-light);
                        & svg.svg--#{$name} {
                            .invertir--#{$name} {
                                fill: $bg;
                            }
                        }
                    }
                    @if map-get($icon, fill) == propio {
                        & svg.svg--#{$name} {
                            & path {
                                fill: $bg;
                            }
                        }
                    }
                }
            }
        }

    // li.svg / a / span.svg--name / svg.svg--name
    // li.svg--icon.svg--$name / a / svg.svg--$name
    } @elseif $brand == fillBlack {
        // Convirtiendo los fill svg a nuestro sitio B/W (color/bg)
        @each $name, $icon in $mapSocialSimple {
            // (li.svg--$name | li.svg--icon) + svg.svg--$name
            &.svg--#{$name},
            & .svg--#{$name} {

                background: $bg;
                @if map-get($icon, fill) == none {
                    -webkit-filter: $filter-bw-before;
                    filter: $filter-bw-before;
                } @elseif map-get($icon, fill) == propio {
                    & path {
                        fill: $color;
                    }
                } @else {
                    fill: $color;
                }
                -webkit-transition: all $ss ease;
                transition: all $ss ease;
            }
        }
        &:hover, &:focus, &:target {
            // Invirtiendo los fill a W y background a su brand color
            @each $name, $icon in $mapSocialSimple {
                // (li.svg--$name | li.svg--icon) + svg.svg--$name
                &.svg--#{$name},
                & .svg--#{$name} {
                    @if map-get($icon, bg) {
                        background: map-get($icon, bg);
                        @if map-get($icon, gradient) {
                            background: -o-#{map-get($icon, gradient)};
                            background: -moz-#{map-get($icon, gradient)};
                            background: -webkit-#{map-get($icon, gradient)};
                        }
                    } @else {
                        background: map-get($icon, bg-light);
                        & svg.svg--#{$name} {
                            .invertir--#{$name} {
                                fill: $bg;
                            }
                        }
                    }
                    @if map-get($icon, fill) == none {
                        -webkit-filter: $filter-bw-after;
                        filter: $filter-bw-after;
                    } @elseif map-get($icon, fill) == propio {
                        & path {
                            fill: $bg;
                        }
                    } @else {
                        fill: $bg;
                    }
                }
            }
        }
    }
}

// todo: crear un map de los colores sociales y un mixin con los parámetros
// Para escoger los colores del map o definir colores propios.
// Además de personalizar el estilo (vertical, redondo, cuadrado, ...)

.social {
    display: table;
    a {
        display: inline-block;
        color: rgba(#fff,.7);
        line-height: 1;
    }
    &.circle,
    &.square{
        a {
            background: rgba(#000,.5);
            padding: .4em;
            margin: .3em;
            &:hover {
                background: rgba(#000,.5);
            }
        }
    }
    &.circle {
        a:before {
            border-radius: 50%;
        }
    }
}
